export BUILD_DIR=${PROJECT_DIR}/reltio-make

function reltio-kubectl() {
  aws-kubectl $@ --namespace reltio
}

function reltio-helm() {
  aws-helm $@ --namespace reltio
}

function reltio-install() {
  _APP=$1 && shift
  _APP="reltio-${_APP}"
  _PROJECT_PATH=${PROJECT_DIR}/${_APP}/helm/
  _GENERATED_CONFIG=${PROJECT_DIR}/reltio-terraform/artifacts/configs/helm-values.yaml

  echo "Installing Reltio application ${_APP} from ${_PROJECT_PATH}"
  (cd ${_PROJECT_PATH}; aws-helm $@ upgrade --namespace=reltio --install --values ${_GENERATED_CONFIG} ${_APP} .)
}

function reltio-uninstall() {
  _APP=$1 && shift
  _APP="reltio-${_APP}"

  echo "Uninstalling Reltio application ${_APP}"
  aws-helm $@ delete --purge ${_APP}
}

function reltio-git-check() { 
  find ${PROJECT_DIR}/reltio-* -maxdepth 0 -type d ! -name . -exec bash -c "cd '{}' && pwd && git st" \; ;
}

function reltio-search()    { 
  find ${PROJECT_DIR}/reltio-* -maxdepth 0 -type d ! -name . -exec bash -c "printf '\n\n{}'; grep -r -InH \
  --exclude-dir=\.[a-zA-Z]* $1 \
  --exclude-dir=reltio-configs \
  --exclude-dir=reltio-k8s \
  --exclude-dir=artifacts \
  '{}' | xargs -I % printf '\n\t--> %'" \; ; printf "\n\n" ; 
} 
